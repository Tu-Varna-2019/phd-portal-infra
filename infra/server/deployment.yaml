---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tuvarna-server
  namespace: tuvarna
  labels:
    degree: phd
    version: v1

spec:
  replicas: 2
  minReadySeconds: 10
  selector:
    matchLabels:
      degree: phd
      version: v1

  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%

  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: tuvarna-server
      labels:
        degree: phd
        version: v1

    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      containers:
        - name: quarkus
          image: ghcr.io/tu-varna-2019/phd-portal-server:release-1.0.0
          imagePullPolicy: Always

          env:
            - name: QUARKUS_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: tuvarna-secrets
                  key: POSTGRES_USER

            - name: QUARKUS_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tuvarna-secrets
                  key: POSTGRES_PASSWORD

            - name: QUARKUS_DATASOURCE_JDBC_URL
              valueFrom:
                secretKeyRef:
                  name: tuvarna-secrets
                  key: POSTGRES_JDBC

            - name: QUARKUS_DATASOURCE_REACTIVE_URL
              valueFrom:
                secretKeyRef:
                  name: tuvarna-secrets
                  key: POSTGRES_JDBC

            - name: QUARKUS_MAILER_FROM
              valueFrom:
                secretKeyRef:
                  name: tuvarna-secrets
                  key: MAILER_FROM

            - name: QUARKUS_MAILER_HOST
              valueFrom:
                secretKeyRef:
                  name: tuvarna-secrets
                  key: MAILER_HOST

            - name: QUARKUS_MAILER_PORT
              value: "587"

            - name: QUARKUS_MAILER_USERNAME
              valueFrom:
                secretKeyRef:
                  name: tuvarna-secrets
                  key: MAILER_USERNAME

            - name: QUARKUS_MAILER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tuvarna-secrets
                  key: MAILER_PASSWORD

            - name: QUARKUS_S3_AWS_CREDENTIALS_TYPE
              value: "static"

            - name: QUARKUS_S3_AWS_CREDENTIALS_STATIC_PROVIDER_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: tuvarna-secrets
                  key: S3_AWS_CREDENTIALS_STATIC_PROVIDER_ACCESS_KEY_ID

            - name: QUARKUS_S3_AWS_CREDENTIALS_STATIC_PROVIDER_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: tuvarna-secrets
                  key: S3_AWS_CREDENTIALS_STATIC_PROVIDER_SECRET_ACCESS_KEY

          ports:
            - name: liveness-port
              containerPort: 8080

          resources:
            requests:
              cpu: 1000m
              memory: 1Gi
            limits:
              cpu: 2000m
              memory: 4Gi

        - name: elastisearch
          image: elasticsearch:7.17.26
          imagePullPolicy: IfNotPresent

          env:
            - name: ELASTIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tuvarna-secrets
                  key: ELASTIC_PASSWORD

            - name: discovery.type
              valueFrom:
                configMapKeyRef:
                  name: tuvarna-configs
                  key: DISCOVERY_TYPE

            - name: xpack.security.enabled
              valueFrom:
                configMapKeyRef:
                  name: tuvarna-configs
                  key: XPACK_SECURITY_ENABLED

          ports:
            - name: liveness-port2
              containerPort: 9200

            - name: liveness-port3
              containerPort: 9300

          resources:
            requests:
              cpu: 1000m
              memory: 1Gi
            limits:
              cpu: 2000m
              memory: 4Gi

          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: liveness-port
          #   failureThreshold: 5
          #   periodSeconds: 10
          #   initialDelaySeconds: 60
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: liveness-port
          # failureThreshold: 5
          # periodSeconds: 10
          # initialDelaySeconds: 60
